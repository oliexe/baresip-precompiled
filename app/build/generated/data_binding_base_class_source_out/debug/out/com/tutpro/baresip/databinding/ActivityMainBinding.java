// Generated by view binder compiler. Do not edit!
package com.tutpro.baresip.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Chronometer;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tutpro.baresip.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton answerButton;

  @NonNull
  public final Spinner aorSpinner;

  @NonNull
  public final LinearLayout buttons;

  @NonNull
  public final ImageButton callButton;

  @NonNull
  public final RelativeLayout callControl;

  @NonNull
  public final RelativeLayout callRow;

  @NonNull
  public final Chronometer callTimer;

  @NonNull
  public final TextView callTitle;

  @NonNull
  public final LinearLayout callTitleRow;

  @NonNull
  public final AutoCompleteTextView callUri;

  @NonNull
  public final ImageButton callsButton;

  @NonNull
  public final ImageButton contactsButton;

  @NonNull
  public final ImageButton dialpadButton;

  @NonNull
  public final EditText dtmf;

  @NonNull
  public final ImageButton hangupButton;

  @NonNull
  public final ImageButton holdButton;

  @NonNull
  public final ImageButton info;

  @NonNull
  public final RelativeLayout mainActivityLayout;

  @NonNull
  public final ImageButton messagesButton;

  @NonNull
  public final TextView onHoldNotice;

  @NonNull
  public final ImageButton rejectButton;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final ImageButton securityButton;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final ImageButton transferButton;

  @NonNull
  public final LinearLayout uriRow;

  @NonNull
  public final ImageButton voicemailButton;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton answerButton,
      @NonNull Spinner aorSpinner, @NonNull LinearLayout buttons, @NonNull ImageButton callButton,
      @NonNull RelativeLayout callControl, @NonNull RelativeLayout callRow,
      @NonNull Chronometer callTimer, @NonNull TextView callTitle,
      @NonNull LinearLayout callTitleRow, @NonNull AutoCompleteTextView callUri,
      @NonNull ImageButton callsButton, @NonNull ImageButton contactsButton,
      @NonNull ImageButton dialpadButton, @NonNull EditText dtmf, @NonNull ImageButton hangupButton,
      @NonNull ImageButton holdButton, @NonNull ImageButton info,
      @NonNull RelativeLayout mainActivityLayout, @NonNull ImageButton messagesButton,
      @NonNull TextView onHoldNotice, @NonNull ImageButton rejectButton,
      @NonNull ScrollView scrollView, @NonNull ImageButton securityButton,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull Toolbar toolbar,
      @NonNull ImageButton transferButton, @NonNull LinearLayout uriRow,
      @NonNull ImageButton voicemailButton) {
    this.rootView = rootView;
    this.answerButton = answerButton;
    this.aorSpinner = aorSpinner;
    this.buttons = buttons;
    this.callButton = callButton;
    this.callControl = callControl;
    this.callRow = callRow;
    this.callTimer = callTimer;
    this.callTitle = callTitle;
    this.callTitleRow = callTitleRow;
    this.callUri = callUri;
    this.callsButton = callsButton;
    this.contactsButton = contactsButton;
    this.dialpadButton = dialpadButton;
    this.dtmf = dtmf;
    this.hangupButton = hangupButton;
    this.holdButton = holdButton;
    this.info = info;
    this.mainActivityLayout = mainActivityLayout;
    this.messagesButton = messagesButton;
    this.onHoldNotice = onHoldNotice;
    this.rejectButton = rejectButton;
    this.scrollView = scrollView;
    this.securityButton = securityButton;
    this.swipeRefresh = swipeRefresh;
    this.toolbar = toolbar;
    this.transferButton = transferButton;
    this.uriRow = uriRow;
    this.voicemailButton = voicemailButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerButton;
      ImageButton answerButton = ViewBindings.findChildViewById(rootView, id);
      if (answerButton == null) {
        break missingId;
      }

      id = R.id.aorSpinner;
      Spinner aorSpinner = ViewBindings.findChildViewById(rootView, id);
      if (aorSpinner == null) {
        break missingId;
      }

      id = R.id.buttons;
      LinearLayout buttons = ViewBindings.findChildViewById(rootView, id);
      if (buttons == null) {
        break missingId;
      }

      id = R.id.callButton;
      ImageButton callButton = ViewBindings.findChildViewById(rootView, id);
      if (callButton == null) {
        break missingId;
      }

      id = R.id.callControl;
      RelativeLayout callControl = ViewBindings.findChildViewById(rootView, id);
      if (callControl == null) {
        break missingId;
      }

      id = R.id.callRow;
      RelativeLayout callRow = ViewBindings.findChildViewById(rootView, id);
      if (callRow == null) {
        break missingId;
      }

      id = R.id.callTimer;
      Chronometer callTimer = ViewBindings.findChildViewById(rootView, id);
      if (callTimer == null) {
        break missingId;
      }

      id = R.id.callTitle;
      TextView callTitle = ViewBindings.findChildViewById(rootView, id);
      if (callTitle == null) {
        break missingId;
      }

      id = R.id.callTitleRow;
      LinearLayout callTitleRow = ViewBindings.findChildViewById(rootView, id);
      if (callTitleRow == null) {
        break missingId;
      }

      id = R.id.callUri;
      AutoCompleteTextView callUri = ViewBindings.findChildViewById(rootView, id);
      if (callUri == null) {
        break missingId;
      }

      id = R.id.callsButton;
      ImageButton callsButton = ViewBindings.findChildViewById(rootView, id);
      if (callsButton == null) {
        break missingId;
      }

      id = R.id.contactsButton;
      ImageButton contactsButton = ViewBindings.findChildViewById(rootView, id);
      if (contactsButton == null) {
        break missingId;
      }

      id = R.id.dialpadButton;
      ImageButton dialpadButton = ViewBindings.findChildViewById(rootView, id);
      if (dialpadButton == null) {
        break missingId;
      }

      id = R.id.dtmf;
      EditText dtmf = ViewBindings.findChildViewById(rootView, id);
      if (dtmf == null) {
        break missingId;
      }

      id = R.id.hangupButton;
      ImageButton hangupButton = ViewBindings.findChildViewById(rootView, id);
      if (hangupButton == null) {
        break missingId;
      }

      id = R.id.holdButton;
      ImageButton holdButton = ViewBindings.findChildViewById(rootView, id);
      if (holdButton == null) {
        break missingId;
      }

      id = R.id.info;
      ImageButton info = ViewBindings.findChildViewById(rootView, id);
      if (info == null) {
        break missingId;
      }

      id = R.id.mainActivityLayout;
      RelativeLayout mainActivityLayout = ViewBindings.findChildViewById(rootView, id);
      if (mainActivityLayout == null) {
        break missingId;
      }

      id = R.id.messagesButton;
      ImageButton messagesButton = ViewBindings.findChildViewById(rootView, id);
      if (messagesButton == null) {
        break missingId;
      }

      id = R.id.onHoldNotice;
      TextView onHoldNotice = ViewBindings.findChildViewById(rootView, id);
      if (onHoldNotice == null) {
        break missingId;
      }

      id = R.id.rejectButton;
      ImageButton rejectButton = ViewBindings.findChildViewById(rootView, id);
      if (rejectButton == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.securityButton;
      ImageButton securityButton = ViewBindings.findChildViewById(rootView, id);
      if (securityButton == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.transferButton;
      ImageButton transferButton = ViewBindings.findChildViewById(rootView, id);
      if (transferButton == null) {
        break missingId;
      }

      id = R.id.uriRow;
      LinearLayout uriRow = ViewBindings.findChildViewById(rootView, id);
      if (uriRow == null) {
        break missingId;
      }

      id = R.id.voicemailButton;
      ImageButton voicemailButton = ViewBindings.findChildViewById(rootView, id);
      if (voicemailButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, answerButton, aorSpinner, buttons,
          callButton, callControl, callRow, callTimer, callTitle, callTitleRow, callUri,
          callsButton, contactsButton, dialpadButton, dtmf, hangupButton, holdButton, info,
          mainActivityLayout, messagesButton, onHoldNotice, rejectButton, scrollView,
          securityButton, swipeRefresh, toolbar, transferButton, uriRow, voicemailButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
