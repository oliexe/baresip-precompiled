// Generated by view binder compiler. Do not edit!
package com.tutpro.baresip.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tutpro.baresip.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatRowBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView CardAvatar;

  @NonNull
  public final ImageView ImageAvatar;

  @NonNull
  public final TextView TextAvatar;

  @NonNull
  public final LinearLayout chat;

  @NonNull
  public final TextView info;

  @NonNull
  public final TextView peer;

  @NonNull
  public final TextView text;

  private ChatRowBinding(@NonNull RelativeLayout rootView, @NonNull CardView CardAvatar,
      @NonNull ImageView ImageAvatar, @NonNull TextView TextAvatar, @NonNull LinearLayout chat,
      @NonNull TextView info, @NonNull TextView peer, @NonNull TextView text) {
    this.rootView = rootView;
    this.CardAvatar = CardAvatar;
    this.ImageAvatar = ImageAvatar;
    this.TextAvatar = TextAvatar;
    this.chat = chat;
    this.info = info;
    this.peer = peer;
    this.text = text;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatRowBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CardAvatar;
      CardView CardAvatar = ViewBindings.findChildViewById(rootView, id);
      if (CardAvatar == null) {
        break missingId;
      }

      id = R.id.ImageAvatar;
      ImageView ImageAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ImageAvatar == null) {
        break missingId;
      }

      id = R.id.TextAvatar;
      TextView TextAvatar = ViewBindings.findChildViewById(rootView, id);
      if (TextAvatar == null) {
        break missingId;
      }

      id = R.id.chat;
      LinearLayout chat = ViewBindings.findChildViewById(rootView, id);
      if (chat == null) {
        break missingId;
      }

      id = R.id.info;
      TextView info = ViewBindings.findChildViewById(rootView, id);
      if (info == null) {
        break missingId;
      }

      id = R.id.peer;
      TextView peer = ViewBindings.findChildViewById(rootView, id);
      if (peer == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      return new ChatRowBinding((RelativeLayout) rootView, CardAvatar, ImageAvatar, TextAvatar,
          chat, info, peer, text);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
